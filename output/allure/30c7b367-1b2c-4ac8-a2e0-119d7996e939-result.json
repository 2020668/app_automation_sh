{"name": "test_screen_order[data34]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_cases.test_orderbook.TestOrderBook object at 0x0000000004F0DA30>\ndata = {'login_phone': '18971330010', 'login_pwd': '123456', 'main_store_name': '吉野家日式料理店', 'status': '支付成功', ...}\nrun_app = <appium.webdriver.webdriver.WebDriver (session=\"99c5e52c-f1d5-42ca-bd00-39f06202643e\")>\n\n    @pytest.mark.screen\n    @pytest.mark.parametrize(\"data\", od.screen_data)\n    def test_screen_order(self, data, run_app):\n        # 执行登录\n        LoginPage(run_app).login_action(data[\"login_phone\"], data[\"login_pwd\"])\n    \n>       screen_result = OrderBookPage(run_app).screen_order(login_phone=data[\"login_phone\"],\n                                                            login_pwd=data[\"login_pwd\"],\n                                                            main_store_name=data[\"main_store_name\"],\n                                                            store_name=data[\"store_name\"],\n                                                            store_id=data[\"store_id\"],\n                                                            time_desc=data[\"time_desc\"],\n                                                            time_start=data[\"time_start\"],\n                                                            time_end=data[\"time_end\"],\n                                                            terminal_type=data[\"terminal_type\"],\n                                                            terminal_name=data[\"terminal_name\"],\n                                                            terminal_id=data[\"terminal_id\"],\n                                                            type_source=data[\"type_source\"],\n                                                            status=data[\"status\"]\n                                                            )\n\ntest_cases\\test_orderbook.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_ojbects\\orderbook_page.py:503: in screen_order\n    self.wait_ele_visible(loc=Loc.order_nav_loc, img_desc=\"账单按钮\")\ncommon\\basepage.py:33: in wait_ele_visible\n    WebDriverWait(self.driver, timeout, frequency).until(ec.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"99c5e52c-f1d5-42ca-bd00-39f06202643e\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000000004F1F6A0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "f327345c-0f16-4ef5-9155-0cacc8fa4a84-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'login_phone': '18971330010', 'login_pwd': '123456', 'main_store_name': '吉野家日式料理店', 'store_name': None, 'store_id': None, 'time_desc': '本月', 'time_start': None, 'time_end': None, 'terminal_type': '指定终端', 'terminal_name': '收款1号机', 'terminal_id': 'qr_pay:NO_2018122515457307773472', 'type_source': '其他', 'status': '支付成功'}"}], "start": 1579168473308, "stop": 1579168512950, "uuid": "aba023a9-f5e4-4c54-9253-ee681435690a", "historyId": "4d170bfe480f7ee30e49d91297a3608e", "testCaseId": "3d777f4d2a951069fe1277598e603313", "fullName": "test_cases.test_orderbook.TestOrderBook#test_screen_order", "labels": [{"name": "tag", "value": "order"}, {"name": "tag", "value": "screen"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_orderbook"}, {"name": "subSuite", "value": "TestOrderBook"}, {"name": "host", "value": "AB-201906291255"}, {"name": "thread", "value": "8276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_orderbook"}]}